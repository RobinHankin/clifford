% -*- mode: noweb; noweb-default-code-mode: R-mode; -*-
\documentclass[nojss]{jss}
\usepackage{amsmath}
\usepackage{amssymb}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% declarations for jss.cls %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%% just as usual
\author{Robin K. S. Hankin\\Auckland University of Technology}
\title{Clifford algebra in \proglang{R}}
%\VignetteIndexEntry{The clifford package}

%% for pretty printing and a nice hypersummary also set:
\Plainauthor{Robin K. S. Hankin}
\Plaintitle{The clifford package}
\Shorttitle{The clifford package}

%% an abstract and keywords
\Abstract{Here I present the \pkg{clifford} package for working with
  Clifford algebras.  The algebra is described and package idiom is
  given.}

\Keywords{Clifford algebra}
\Plainkeywords{Clifford algebra}
  
%% publication information
%% NOTE: This needs to filled out ONLY IF THE PAPER WAS ACCEPTED.
%% If it was not (yet) accepted, leave them commented.
%% \Volume{13}
%% \Issue{9}
%% \Month{September}
%% \Year{2004}
%% \Submitdate{2004-09-29}
%% \Acceptdate{2004-09-29}
%% \Repository{https://github.com/RobinHankin/lorentz} %% this line for Tragula

%% The address of (at least) one author should be given
%% in the following format:
\Address{
  Robin K. S. Hankin\\%\orcid{https://orcid.org/0000-0001-5982-0415}\\
  Auckland University of Technology\\
  E-mail: \email{hankin.robin@gmail.com}
}
%% It is also possible to add a telephone and fax number
%% before the e-mail in the following format:
%% Telephone: +43/1/31336-5053
%% Fax: +43/1/31336-734

%% for those who use Sweave please include the following line (with % symbols):
%% need no \usepackage{Sweave.sty}

%% end of declarations %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%



\SweaveOpts{}

\begin{document}

<<setup,echo=FALSE,print=FALSE>>=
library("clifford")
options("width"=80)
@ 

\section{Introduction}

Clifford algebras are an interesting and instructive mathematical
object with a rich structure that has varied applications to physics.

\subsection{Existing work}

Computational support for working with the Clifford algebras is part
of a number of algebra systems including Sage~\citep{sagemath2019},
\proglang{sympy}~\citep{sympy2017}.  Here I provide R-centric
functionality for Clifford algebras.  Notation
follows~\cite{snygg2010}.


\newcommand{\ei}[1]{\ensuremath{{\bf e}_{#1}}}
\newcommand{\bx}{\ensuremath{{\bf x}}}
\newcommand{\by}{\ensuremath{{\bf y}}}

Given vectors

\begin{eqnarray}
\bx = x^1\ei{1} + x^2\ei{2} + x^3\ei{3}\nonumber\\
\by = y^1\ei{1} + y^2\ei{2} + y^3\ei{3}
\end{eqnarray} 

we can define a formal product using the relations

\begin{equation}\label{square}
\left(\ei{1}\right)^2=
\left(\ei{2}\right)^2=
\left(\ei{3}\right)^2=1
\end{equation}
  
  and
  
\begin{equation}\label{sumprod}
\ei{2}\ei{3} + \ei{3}\ei{2} = 
\ei{1}\ei{3} + \ei{3}\ei{1} = 
\ei{2}\ei{1} + \ei{1}\ei{2} = 0
\end{equation}

to give
  
\begin{eqnarray}
\bx\by &=&
\left(x^1\ei{1} + x^2\ei{2} + x^3\ei{3}\right)
\left(y^1\ei{1} + y^2\ei{2} + y^3\ei{3}\right)\nonumber\\
&=& \left(x^1y^1+x^2y^2+x^3y^3\right) +\nonumber\\&&
       \left(x^2y^3-x^3y^2\right)\ei{2}\ei{3} + 
       \left(x^3y^1-x^1y^3\right)\ei{1}\ei{3} + 
       \left(x^1y^2-x^2y^1\right)\ei{1}\ei{2}
\end{eqnarray}
  
Multiplication is associative by design.  Snygg goes on to consider
the algebra spanned by products of $\ei{1},\ei{2},\ei{3}$ and shows
that this is an eight dimensional space spanned by

\begin{equation}
\left\{
1,\ei{1},\ei{2},\ei{3},\ei{12},\ei{31},\ei{12},\ei{123}
\right\}
\end{equation}

where $\ei{12}=\ei{1}\ei{2}$ and so on.  Thus a general element of
this space would be

\begin{equation}
a^0+
a^1\ei{1} + a^2\ei{2} + a^3\ei{3} +
a^{12}\ei{12} + a^{31}\ei{31} + a^{23}\ei{23} +
a^{123}\ei{123}
\end{equation}

(here the $a$'s are real).  That the space is closed under
multiplication follows from equations~\ref{square} and~\ref{sumprod};
thus, for example,

\begin{equation}
  \ei{1}\ei{3}\ei{1}\ei{2}=
  \ei{1}\ei{1}\ei{3}\ei{2}=
  \ei{3}\ei{2}=
  -\ei{3}\ei{2}=-\ei{23}.
  \end{equation}

(observe how associativity is assumed).


\subsection{Clifford algebra in a pseudo-Euclidean space}

Equations~\ref{square} and~\ref{sumprod} defined a positive-definite
inner product on the vector space spanned by~$\ei{1},\ei{2},\ei{3}$.
This is readily generalized in two ways: firstly, we consider
$\ei{1},\ldots,\ei{n}$, and secondly allow a more general inner
product.  Conventionally we define

\begin{equation}\label{gencliff1}
\ei{i}\ei{j}+\ei{j}\ei{i}=2n_{ij}
\end{equation}
where  
\begin{equation}\label{gencliff2}
  n_{ij} = \begin{cases}
    1, & i=j=1,\ldots,p\\
    -1, & i=j=p+1,\ldots,n\\
    0, &i\neq j
  \end{cases}
\end{equation}

for $1\leqslant p\leqslant n$; usually we also specify $p+q=n$ and
write $\mathbb{R}_{p,q}$ (sometimes ${\mathcal C}_{p,q}$) for the
Clifford algebra specified by equations \ref{gencliff1} and
\ref{gencliff2}.  Annoyingly enough, the metric tensor $\eta$ as used
in relativity (usually) has the negative sign first:

\begin{equation}\eta=
  \begin{bmatrix}
    -1&0&0&0\\
    0&1&0&0\\
    0&0&1&0\\
    0&0&0&1\\
  \end{bmatrix}
\end{equation}


\subsection{Wedge product of the exterior algebra is a special case
  of the geometric product}

If we specify that the quadratic form is identically zero then
equation \ref{gencliff1} becomes

\begin{equation}\label{specwedge}
\ei{i}\ei{j}+\ei{j}\ei{i}=0,\qquad 1\leqslant i,j\leqslant p
\end{equation}

which implies that $\ei{i}\ei{i}=0$.  Geometric products become wedge
products (although linearity means that we may add terms of different
grades, unlike conventional Grassman algebra).

\section{The package in use}

Suppose we want to work with $\ei{1} + 2\ei{2} + 3\ei{3}$.  In R idiom
this would be

<<simpleexample>>=
(x <- clifford(list(1,2,3),1:3))
@ 

Function \code{clifford()} takes a list of blades and a vector of
coefficients.  Addition and subtraction work as expected:

<<xminusy>>=
y <- clifford(list(1),1)
x-y
@ 

In the above, see how the $\ei{1}$ blade has vanished.  We can
multiply Clifford elements using natural R idiom:

<<xtimesy>>=
x*y
@ 

(Multiplication that Snygg denotes by juxtaposition is here indicated
with a \code{*}).  We can consider arbitrarily high dimensional data:

<<ztimesx>>=
(z <- as.1vector(1:7))
z*x
@ 

In the above, we coerce a vector to a Clifford 1-vector.  The package
includes many functions to generate Clifford objects:

<<firstuseofrcliff>>=
rcliff()
@ 

The defaults for \code{rcliff()} specify that the object is a sum of
grade-4 blades but this can be altered:

<<anotherrcliff>>=
(x <- rcliff(d=7,grade=5,include.fewer=TRUE))
grades(x)
@ 

\subsection{Pseudo-Euclidean spaces}

The signature of the metric may be altered.  Starting with the
Euclidean case we have:
    
<<e1e2cliff>>=
e1 <- clifford(list(1),1)
e2 <- clifford(list(2),1)
e1*e1
e2*e2
@ 


but if we wish to consider $n=\begin{bmatrix}1&0\\0&-1\end{bmatrix}$,
the package idiom is to use the \code{signature()} function:

<<trysig>>=
signature(1)  # signature +-
e1*e1 # as before
e2*e2 # sign changes
@ 


Suppose we wish to use a signature $+++-$, corresponding to the
Minkowski metric in special relativity; this would be indicated in
pacakge idiom by \code{signature(3)}.  Note that the clifford objects
themselves do not store the signature; it is used only by the product
operation \code{*}.

<<sigthree1>>=
x <- rcliff(d=4,grade=3,include.fewer=TRUE)
y <- rcliff(d=4,grade=3,include.fewer=TRUE)
@ 

Then we may multiply these two clifford objects using either the
default positive-definite inner product, or the Minkowski metric:

<<sigthree2>>=
x*y
signature(3)  # switch to signature +++-
x*y
@ 

In the above, see how the products are different using the two inner
products.  Function \code{signature()} takes the special value zero to
return to a positive-definite inner product:

<<sigzero>>=
signature(0)
@ 


\subsection{Wedge products}

As noted above, if the underlying quadratic form is identically zero,
then the geometric product formally reduces to the exterior wedge
product.  


To recover the wedge product we use a negative signature:

<<setnegsig>>=
signature(-1)  # sets quadratic form to zero
blade(1:5)     # blade() gives a coefficient 1 blade
@ 

and then geometric product becomes wedge product:
<<geomiswedge>>=
blade(1:3) * blade(7:9) 
blade(1:5) * blade(5:7) # zero because of repeated basis
blade(5:7) * blade(1:3) # negative because of swaps
@ 

\subsection{Higher dimensional spaces}

\cite{ablamowicz2012} consider high-dimensional Clifford algebras and
consider the following two elements of the 1024-dimensional Clifford
algebra spanned by $\ei{1},\ldots,\ei{10}$ which are implemented in
the current package as follows:

<<abramandfauser>>=
options("basissep" = ",")
(x <- clifford(list(1:3,c(1,5,7,8,10)),c(4,-10)) + 2)
(y <- clifford(list(c(1,2,3,7),c(1,5,6,8),c(1,4,6,7)),c(4,1,-3)) - 1)
@ 

Their geometric product is given in the package as

<<geomprod>>=
x*y
@ 

in agreement with \cite{ablamowicz2012}.

\section{Conclusions and further work}

The \pkg{clifford} package furnishes a consistent and documented suite
of reasonably efficient \proglang{R}-centric functionality.  Further
work might include closer integration with the \code{wedge}
package~\citep{hankin2019}.

\bibliography{clifford}
\end{document}
 
